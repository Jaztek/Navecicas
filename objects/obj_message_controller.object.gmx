<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>
timer_info= 30 * 2.5;
i1 = timer_info;
i2 = timer_info;

player1_inst = global.player1;
player2_inst =  global.player2;

map_msg = ds_map_create();
ds_map_add(map_msg, player1_inst, ds_queue_create());
ds_map_add(map_msg, player2_inst, ds_queue_create());
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="1" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Clean up
ds_queue_destroy(map_msg[player1_inst]);
ds_queue_destroy(map_msg[player2_inst]);
ds_map_destroy(map_msg);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//timer_info

if (!ds_queue_empty(map_msg[? player1_inst])) {
    if (i1 &lt;= 0) {
        ds_queue_dequeue(map_msg[? player1_inst]);
        i1 = timer_info;
    } else {
        var angle = -90;
        var msg = ds_queue_head(map_msg[? player1_inst]);
        scr_draw_outline_text(player1_inst.x + 70, player1_inst.y, msg, angle, c_white, c_black);
        i1 -= 1;
    }
}

if (!ds_queue_empty(map_msg[? player2_inst])) {
    if (i2 &lt;= 0) {
        ds_queue_dequeue(map_msg[? player2_inst]);
        i2 = timer_info;
    } else {
        var angle = 90;
        var msg = ds_queue_head(map_msg[? player2_inst]);
        scr_draw_outline_text(player2_inst.x - 70, player2_inst.y, msg, angle, c_white, c_black);
        i2 -= 1;
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
