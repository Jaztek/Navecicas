<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///constructor

global.debug_mode = true;
player1_inst = global.player1;
player2_inst =  global.player2;
game_controller_inst = instance_find(obj_game_controller, 0);

game_paused = false;

var i = 4;
repeat (5){
    power_up_select[i]= noone;
    i -= 1;
}

instance_create(130, room_height /2, obj_bt_center);
instance_create(room_width - 130, room_height /2, obj_bt_center);

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// movimiento tactil



if (keyboard_check(vk_up)) {
    with (player1_inst) {
        facing_direction += 8;
       // vspd += 1;
    }
}

if (keyboard_check(vk_down)) {
    with (player1_inst) {
        facing_direction -= 8;
       // vspd += 1;
    }
}

if (keyboard_check(vk_right)) {
    with (player1_inst) {
       
       vspd -= sin(degtorad(image_angle));
       hspd += cos(degtorad(image_angle));
    }
}

for (i = 0; i &lt; 5; i ++) {

    if (device_mouse_check_button(i, mb_any)) {
        
        var d_mouse_x = device_mouse_x(i);
        var d_mouse_y = device_mouse_y(i);
        
        if (d_mouse_x &gt; room_width / 2) {
            if (player2_inst.state == player_state.destroyed) {
                exit;
            }
        } else {
            if (player1_inst.state == player_state.destroyed) {
                exit;
            }
        }
        
        if (d_mouse_x &lt; UI_BAND_WIDTH ||
            d_mouse_x &gt; room_width - UI_BAND_WIDTH) {
            
            scr_input_movement(i); 
            
        } else {
            power_up_select[i] = 
                scr_input_powerup(i, power_up_select[i]);
            show_debug_message(power_up_select[i]);
        }   
    } else if (device_mouse_check_button_released(i, mb_left)) {
    
        if (game_controller_inst.state == game_state.game_over) {
            exit;
        }
        
        power_up_select[i] = 
                scr_input_powerup(i, power_up_select[i]);
            show_debug_message(power_up_select[i]); 
            
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Debug drawing

if(global.debug_mode){
    draw_set_alpha(0.2);
    draw_set_colour(c_red);
    draw_rectangle(0, 0, UI_BAND_WIDTH, room_height / 2 - 150, true);
    draw_rectangle(room_width - UI_BAND_WIDTH, 0, room_width, room_height / 2 - 150, true);
    
    draw_rectangle(0, room_height / 2 + 150, UI_BAND_WIDTH, room_height, true);
    draw_rectangle(room_width - UI_BAND_WIDTH, room_height / 2 + 150, room_width, room_height, true);
    
    draw_set_alpha(1);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="32">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>game_paused = !game_paused;

if (game_paused) {
    instance_deactivate_all(true);
} else {
    instance_activate_all();
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
