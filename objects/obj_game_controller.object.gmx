<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>depth = 100;
player1_inst = global.player1;
player2_inst = global.player2;

enum game_state {
    normal,
    game_over, 
    started
}

state = game_state.normal;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if((player1_inst.state == player_state.destroyed 
    || player2_inst.state == player_state.destroyed)
        &amp;&amp; state != game_state.game_over){
        
    state = game_state.game_over;
    
    with(obj_player){   
        if(facing_direction == 0){
            var boton = instance_create(room_width /2 - room_width /4, 
                room_height /2, obj_bt_start);
            boton.image_angle = -90;
        } else {
            var boton2 = instance_create(room_width / 2 + room_width /4,
                room_height /2, obj_bt_start);
            boton2.image_angle = 90;
        }
    }         
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="64">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>
var p1_hit_points = string(player1_inst.hit_points);
var p2_hit_points = string(player2_inst.hit_points);

if (string_length(p1_hit_points) == 1) {
    p1_hit_points = "0" + p1_hit_points;
}

if (string_length(p2_hit_points) == 1) {
    p2_hit_points = "0" + p2_hit_points;
}

var score_text = p1_hit_points + " / " + p2_hit_points;

draw_set_halign(fa_center);
draw_set_font(fnt_space);
var y_position = 50;

draw_set_color(c_white);
draw_text(room_width / 2, y_position, score_text);

draw_set_font(fnt_log);
draw_text(32, 35, "FPS REAL = " + string(fps_real));
draw_text(32, 74, "FPS = " + string(fps));

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>
var total_hit_points = player1_inst.hit_points + player2_inst.hit_points;

var side1_proportion = player1_inst.hit_points / total_hit_points;

var side1_width = room_width * side1_proportion;
var degradado_width = 50;

draw_set_alpha(0.5);

draw_rectangle_color(0, 10, side1_width - degradado_width, 40, c_green, c_green, c_green, c_green, false);
draw_rectangle_color(side1_width - degradado_width + 1, 10, side1_width + degradado_width, 40, c_green, c_red, c_red, c_green, false);
draw_rectangle_color(side1_width + degradado_width + 1, 10, room_width, 40, c_red, c_red, c_red, c_red, false);

draw_set_alpha(1);
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
